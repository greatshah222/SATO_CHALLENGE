// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MobileBar renders correctly if not logged in 1`] = `
<WithStyles(MobileBar)
  accountBtnHandler={[MockFunction]}
  accountBtnLabel="Kirjaudu"
  accountItems={
    Array [
      Object {
        "handler": [Function],
        "label": "Omasato",
        "variant": "button",
      },
      Object {
        "handler": [Function],
        "icon": "home",
        "label": "Minun kotini",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "message",
        "label": "Viestit",
        "variant": "buttonMenuItem",
      },
      Object {
        "active": true,
        "handler": [Function],
        "icon": "benefit",
        "label": "Asiakasedut",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "loggedInUser",
        "iconContent": "AK",
        "label": "Omat tiedot",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "logout",
        "label": "Kirjaudu ulos",
        "variant": "buttonMenuItem",
      },
    ]
  }
  buttons={
    Array [
      Object {
        "active": true,
        "handler": [Function],
        "id": 1,
        "label": "Löydä koti",
        "variant": "button",
      },
      Object {
        "active": true,
        "handler": [Function],
        "id": 2,
        "items": Array [
          Object {
            "handler": [Function],
            "id": 6,
            "items": Array [
              Object {
                "handler": [Function],
                "id": 9,
                "items": Array [],
                "label": "Kodin etsiminen",
                "variant": "buttonMenuItem",
              },
            ],
            "label": "Usein kysyttyä",
            "variant": "buttonMenuItem",
          },
          Object {
            "active": true,
            "handler": [Function],
            "id": 7,
            "label": "Ajankohtaista",
            "variant": "buttonMenuItem",
          },
          Object {
            "handler": [Function],
            "id": 8,
            "label": "Kotona",
            "variant": "buttonMenuItem",
          },
        ],
        "label": "Tietoa asumisesta",
        "variant": "button",
      },
      Object {
        "handler": [Function],
        "id": 4,
        "label": "Ota yhteyttä",
        "variant": "button",
      },
    ]
  }
  defaultBackLabel="Takaisin"
  handleSearch={[MockFunction]}
  links={
    Array [
      Object {
        "active": true,
        "label": "Etusivu",
        "route": "/",
      },
      Object {
        "handler": [Function],
        "label": "Sijoittajille",
        "type": "smallOnMobile",
      },
      Object {
        "executeHandler": true,
        "handler": [Function],
        "id": 10,
        "items": Array [
          Object {
            "handler": [Function],
            "label": "Mediapankki",
            "variant": "buttonMenuItem",
          },
          Object {
            "handler": [Function],
            "label": "Etsitkö asiantuntijaa?",
            "variant": "buttonMenuItem",
          },
        ],
        "label": "Medialle",
        "small": true,
        "type": "smallOnMobile",
      },
      Object {
        "handler": [Function],
        "label": "SATO yrityksenä",
        "type": "smallOnMobile",
      },
    ]
  }
  localeLink={
    Object {
      "handler": [Function],
      "label": "In English",
    }
  }
  loggedIn={false}
  searchPlaceholder="Etsi tietoa SATOlta..."
  searchSuggestions={Array []}
  searchTerm=""
>
  <MobileBar
    accountBtnHandler={[MockFunction]}
    accountBtnLabel="Kirjaudu"
    accountItems={
      Array [
        Object {
          "handler": [Function],
          "label": "Omasato",
          "variant": "button",
        },
        Object {
          "handler": [Function],
          "icon": "home",
          "label": "Minun kotini",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "message",
          "label": "Viestit",
          "variant": "buttonMenuItem",
        },
        Object {
          "active": true,
          "handler": [Function],
          "icon": "benefit",
          "label": "Asiakasedut",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "loggedInUser",
          "iconContent": "AK",
          "label": "Omat tiedot",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "logout",
          "label": "Kirjaudu ulos",
          "variant": "buttonMenuItem",
        },
      ]
    }
    buttons={
      Array [
        Object {
          "active": true,
          "handler": [Function],
          "id": 1,
          "label": "Löydä koti",
          "variant": "button",
        },
        Object {
          "active": true,
          "handler": [Function],
          "id": 2,
          "items": Array [
            Object {
              "handler": [Function],
              "id": 6,
              "items": Array [
                Object {
                  "handler": [Function],
                  "id": 9,
                  "items": Array [],
                  "label": "Kodin etsiminen",
                  "variant": "buttonMenuItem",
                },
              ],
              "label": "Usein kysyttyä",
              "variant": "buttonMenuItem",
            },
            Object {
              "active": true,
              "handler": [Function],
              "id": 7,
              "label": "Ajankohtaista",
              "variant": "buttonMenuItem",
            },
            Object {
              "handler": [Function],
              "id": 8,
              "label": "Kotona",
              "variant": "buttonMenuItem",
            },
          ],
          "label": "Tietoa asumisesta",
          "variant": "button",
        },
        Object {
          "handler": [Function],
          "id": 4,
          "label": "Ota yhteyttä",
          "variant": "button",
        },
      ]
    }
    classes={
      Object {
        "accountBtn": "MobileBar-accountBtn-8",
        "dialog": "MobileBar-dialog-12",
        "grow": "MobileBar-grow-3",
        "link": "MobileBar-link-2",
        "localeLink": "MobileBar-localeLink-11",
        "logo": "MobileBar-logo-5",
        "logoContainer": "MobileBar-logoContainer-4",
        "paper": "MobileBar-paper-10",
        "root": "MobileBar-root-1",
        "separator": "MobileBar-separator-7",
        "toolbar": "MobileBar-toolbar-6",
        "top": "MobileBar-top-9",
      }
    }
    defaultBackLabel="Takaisin"
    handleSearch={[MockFunction]}
    links={
      Array [
        Object {
          "active": true,
          "label": "Etusivu",
          "route": "/",
        },
        Object {
          "handler": [Function],
          "label": "Sijoittajille",
          "type": "smallOnMobile",
        },
        Object {
          "executeHandler": true,
          "handler": [Function],
          "id": 10,
          "items": Array [
            Object {
              "handler": [Function],
              "label": "Mediapankki",
              "variant": "buttonMenuItem",
            },
            Object {
              "handler": [Function],
              "label": "Etsitkö asiantuntijaa?",
              "variant": "buttonMenuItem",
            },
          ],
          "label": "Medialle",
          "small": true,
          "type": "smallOnMobile",
        },
        Object {
          "handler": [Function],
          "label": "SATO yrityksenä",
          "type": "smallOnMobile",
        },
      ]
    }
    localeLink={
      Object {
        "handler": [Function],
        "label": "In English",
      }
    }
    loggedIn={false}
    searchPlaceholder="Etsi tietoa SATOlta..."
    searchSuggestions={Array []}
    searchTerm=""
  >
    <WithStyles(ForwardRef(AppBar))
      className="MobileBar-root-1"
      position="static"
    >
      <ForwardRef(AppBar)
        className="MobileBar-root-1"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault",
            "colorPrimary": "MuiAppBar-colorPrimary",
            "colorSecondary": "MuiAppBar-colorSecondary",
            "positionAbsolute": "MuiAppBar-positionAbsolute",
            "positionFixed": "MuiAppBar-positionFixed",
            "positionRelative": "MuiAppBar-positionRelative",
            "positionStatic": "MuiAppBar-positionStatic",
            "positionSticky": "MuiAppBar-positionSticky",
            "root": "MuiAppBar-root",
          }
        }
        position="static"
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary"
          component="header"
          elevation={4}
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary MuiPaper-elevation4"
            >
              <WithStyles(ForwardRef(Toolbar))
                className="MobileBar-toolbar-6"
              >
                <ForwardRef(Toolbar)
                  className="MobileBar-toolbar-6"
                  classes={
                    Object {
                      "dense": "MuiToolbar-dense",
                      "gutters": "MuiToolbar-gutters",
                      "regular": "MuiToolbar-regular",
                      "root": "MuiToolbar-root",
                    }
                  }
                >
                  <div
                    className="MuiToolbar-root MuiToolbar-regular MobileBar-toolbar-6 MuiToolbar-gutters"
                  >
                    <IconButton
                      onClick={[Function]}
                      variant="toolbar"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        classes={
                          Object {
                            "root": "makeStyles-root-54 makeStyles-toolbar-58",
                          }
                        }
                        onClick={[Function]}
                      >
                        <ForwardRef(IconButton)
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <button
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <ForwardRef>
                                    <WithRef>
                                      <Menu>
                                        <WithStyles(ForwardRef)>
                                          <ForwardRef
                                            classes={
                                              Object {
                                                "large": "ForwardRef-large-74",
                                                "relative": "ForwardRef-relative-76",
                                                "small": "ForwardRef-small-75",
                                              }
                                            }
                                          >
                                            <WithRef
                                              classes={
                                                Object {
                                                  "large": "ForwardRef-large-74",
                                                  "relative": "ForwardRef-relative-76",
                                                  "small": "ForwardRef-small-75",
                                                }
                                              }
                                            >
                                              <SvgIcon
                                                classes={
                                                  Object {
                                                    "large": "ForwardRef-large-74",
                                                    "relative": "ForwardRef-relative-76",
                                                    "small": "ForwardRef-small-75",
                                                  }
                                                }
                                                numOfNewMessages={0}
                                                variant="default"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className=""
                                                  viewBox="0 0 24 24"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className=""
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M3.75 18h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 1 0 0 1.5zm0-5.25h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 1 0 0 1.5zm-.75-6c0 .414.336.75.75.75h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 0 0-.75.75z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </SvgIcon>
                                            </WithRef>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </Menu>
                                    </WithRef>
                                  </ForwardRef>
                                </span>
                                <NoSsr />
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </IconButton>
                    <div
                      className="MobileBar-separator-7"
                    />
                    <div
                      className="MobileBar-logoContainer-4"
                    >
                      <ForwardRef
                        className="MobileBar-logo-5"
                      >
                        <WithRef
                          className="MobileBar-logo-5"
                        >
                          <Logo
                            className="MobileBar-logo-5"
                          >
                            <svg
                              className="MobileBar-logo-5"
                              id="Layer_1"
                              viewBox="230.8 272.4 626.2 175.3"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <style>
                                .st5{fill:#f29318}
                              </style>
                              <path
                                className="st5"
                                d="M487.6 300.4h-36.7c-30.5 0-55.1 24.7-55.1 55.1v36.8c0 30.5 24.7 55.2 55.1 55.2h40.9v-36.9h-48.2c-6.1 0-11.1-5-11.1-11.1v-51.4c0-6.1 5-11.1 11.1-11.1H495c6.1 0 11.1 5 11.1 11.1v99.2h36.8v-91.9c-.2-30.3-24.8-55-55.3-55m213.3 36.7v-35.2H593.8v-29.2H557v119.6c0 30.5 24.7 55.2 55.2 55.2h36.7c24 0 44.4-15.4 52-36.8h-96c-6.1 0-11.1-5-11.1-11.1v-62.5h107.1zm100.7-36.7h-36.7c-30.5 0-55.2 24.7-55.2 55.1v36.8c0 30.5 24.7 55.2 55.2 55.2h36.7c30.4 0 55.1-24.7 55.1-55.2v-36.8c0-30.4-24.6-55.1-55.1-55.1m-44 110.2c-6.1 0-11.1-5-11.1-11.1v-51.4c0-6.1 5-11.1 11.1-11.1H809c6.1 0 11.1 5 11.1 11.1v51.5c0 6.1-5 11.1-11.1 11.1h-51.4v-.1zM328.2 300.4h-42c-30.5 0-55.1 24.7-55.1 55.1 0 23.9 16.6 43.8 38.9 49v-56.3c0-6.1 5-11.1 11.1-11.1h99.1c-7.6-21.4-28-36.7-52-36.7"
                              />
                              <path
                                className="st5"
                                d="M285.4 447.4h42c30.5 0 55.1-24.7 55.1-55.1 0-23.9-16.6-43.8-38.9-49v56.3c0 6.1-5 11.1-11.1 11.1h-99.1c7.6 21.4 27.9 36.7 52 36.7"
                              />
                            </svg>
                          </Logo>
                        </WithRef>
                      </ForwardRef>
                    </div>
                    <div
                      className="MobileBar-grow-3"
                    />
                    <ForwardRef
                      className="MobileBar-accountBtn-8"
                      color="default"
                      onClick={[MockFunction]}
                      size="small"
                    >
                      <WithRef
                        className="MobileBar-accountBtn-8"
                        color="default"
                        onClick={[MockFunction]}
                        size="small"
                      >
                        <Button
                          className="MobileBar-accountBtn-8"
                          color="default"
                          onClick={[MockFunction]}
                          size="small"
                        >
                          <WithStyles(ForwardRef(Button))
                            className="MobileBar-accountBtn-8"
                            classes={
                              Object {
                                "focusVisible": "makeStyles-focusVisible-91",
                                "root": "makeStyles-root-86",
                              }
                            }
                            color="default"
                            disableRipple={true}
                            disableTouchRipple={true}
                            onClick={[MockFunction]}
                            size="small"
                          >
                            <ForwardRef(Button)
                              className="MobileBar-accountBtn-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible makeStyles-focusVisible-91",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root makeStyles-root-86",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="default"
                              disableRipple={true}
                              disableTouchRipple={true}
                              onClick={[MockFunction]}
                              size="small"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textSizeSmall MuiButton-sizeSmall"
                                component="button"
                                disableRipple={true}
                                disableTouchRipple={true}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible makeStyles-focusVisible-91"
                                onClick={[MockFunction]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textSizeSmall MuiButton-sizeSmall"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disableRipple={true}
                                  disableTouchRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible makeStyles-focusVisible-91"
                                  onClick={[MockFunction]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textSizeSmall MuiButton-sizeSmall"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[MockFunction]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      Kirjaudu
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                      </WithRef>
                    </ForwardRef>
                    <div
                      className="MobileBar-separator-7"
                    />
                    <IconButton
                      onClick={[Function]}
                      variant="toolbar"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        classes={
                          Object {
                            "root": "makeStyles-root-54 makeStyles-toolbar-58",
                          }
                        }
                        onClick={[Function]}
                      >
                        <ForwardRef(IconButton)
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <button
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <ForwardRef>
                                    <WithRef>
                                      <Search>
                                        <WithStyles(ForwardRef)>
                                          <ForwardRef
                                            classes={
                                              Object {
                                                "large": "ForwardRef-large-74",
                                                "relative": "ForwardRef-relative-76",
                                                "small": "ForwardRef-small-75",
                                              }
                                            }
                                          >
                                            <WithRef
                                              classes={
                                                Object {
                                                  "large": "ForwardRef-large-74",
                                                  "relative": "ForwardRef-relative-76",
                                                  "small": "ForwardRef-small-75",
                                                }
                                              }
                                            >
                                              <SvgIcon
                                                classes={
                                                  Object {
                                                    "large": "ForwardRef-large-74",
                                                    "relative": "ForwardRef-relative-76",
                                                    "small": "ForwardRef-small-75",
                                                  }
                                                }
                                                numOfNewMessages={0}
                                                variant="default"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className=""
                                                  viewBox="0 0 24 24"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className=""
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M9.537 13.45a5.5 5.5 0 1 1 .835.835l-.462-.373-.373-.463zM3.22 19.54a.75.75 0 0 0 1.06 1.061l5.15-5.15a7 7 0 1 0-1.06-1.06l-5.15 5.15z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </SvgIcon>
                                            </WithRef>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </Search>
                                    </WithRef>
                                  </ForwardRef>
                                </span>
                                <NoSsr />
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </IconButton>
                  </div>
                </ForwardRef(Toolbar)>
              </WithStyles(ForwardRef(Toolbar))>
            </header>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(AppBar)>
    </WithStyles(ForwardRef(AppBar))>
    <WithStyles(ForwardRef(Dialog))
      PaperProps={
        Object {
          "elevation": 0,
        }
      }
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "direction": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      className="MobileBar-dialog-12"
      fullScreen={true}
      open={false}
    >
      <ForwardRef(Dialog)
        PaperProps={
          Object {
            "elevation": 0,
          }
        }
        TransitionComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "direction": [Function],
              "in": [Function],
              "onEnter": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "style": [Function],
              "timeout": [Function],
            },
            "render": [Function],
          }
        }
        className="MobileBar-dialog-12"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullScreen={true}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "defaultProps": undefined,
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root MobileBar-dialog-12"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
    <WithStyles(ForwardRef(Dialog))
      PaperProps={
        Object {
          "elevation": 0,
        }
      }
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "direction": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      fullScreen={true}
      open={false}
    >
      <ForwardRef(Dialog)
        PaperProps={
          Object {
            "elevation": 0,
          }
        }
        TransitionComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "direction": [Function],
              "in": [Function],
              "onEnter": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "style": [Function],
              "timeout": [Function],
            },
            "render": [Function],
          }
        }
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullScreen={true}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "defaultProps": undefined,
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </MobileBar>
</WithStyles(MobileBar)>
`;

exports[`MobileBar renders correctly when logged in 1`] = `
<WithStyles(MobileBar)
  accountBtnHandler={[MockFunction]}
  accountBtnLabel="Kirjaudu"
  accountItems={
    Array [
      Object {
        "handler": [Function],
        "label": "Omasato",
        "variant": "button",
      },
      Object {
        "handler": [Function],
        "icon": "home",
        "label": "Minun kotini",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "message",
        "label": "Viestit",
        "variant": "buttonMenuItem",
      },
      Object {
        "active": true,
        "handler": [Function],
        "icon": "benefit",
        "label": "Asiakasedut",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "loggedInUser",
        "iconContent": "AK",
        "label": "Omat tiedot",
        "variant": "buttonMenuItem",
      },
      Object {
        "handler": [Function],
        "icon": "logout",
        "label": "Kirjaudu ulos",
        "variant": "buttonMenuItem",
      },
    ]
  }
  buttons={
    Array [
      Object {
        "active": true,
        "handler": [Function],
        "id": 1,
        "label": "Löydä koti",
        "variant": "button",
      },
      Object {
        "active": true,
        "handler": [Function],
        "id": 2,
        "items": Array [
          Object {
            "handler": [Function],
            "id": 6,
            "items": Array [
              Object {
                "handler": [Function],
                "id": 9,
                "items": Array [],
                "label": "Kodin etsiminen",
                "variant": "buttonMenuItem",
              },
            ],
            "label": "Usein kysyttyä",
            "variant": "buttonMenuItem",
          },
          Object {
            "active": true,
            "handler": [Function],
            "id": 7,
            "label": "Ajankohtaista",
            "variant": "buttonMenuItem",
          },
          Object {
            "handler": [Function],
            "id": 8,
            "label": "Kotona",
            "variant": "buttonMenuItem",
          },
        ],
        "label": "Tietoa asumisesta",
        "variant": "button",
      },
      Object {
        "handler": [Function],
        "id": 4,
        "label": "Ota yhteyttä",
        "variant": "button",
      },
    ]
  }
  defaultBackLabel="Takaisin"
  handleSearch={[MockFunction]}
  links={
    Array [
      Object {
        "active": true,
        "label": "Etusivu",
        "route": "/",
      },
      Object {
        "handler": [Function],
        "label": "Sijoittajille",
        "type": "smallOnMobile",
      },
      Object {
        "executeHandler": true,
        "handler": [Function],
        "id": 10,
        "items": Array [
          Object {
            "handler": [Function],
            "label": "Mediapankki",
            "variant": "buttonMenuItem",
          },
          Object {
            "handler": [Function],
            "label": "Etsitkö asiantuntijaa?",
            "variant": "buttonMenuItem",
          },
        ],
        "label": "Medialle",
        "small": true,
        "type": "smallOnMobile",
      },
      Object {
        "handler": [Function],
        "label": "SATO yrityksenä",
        "type": "smallOnMobile",
      },
    ]
  }
  localeLink={
    Object {
      "handler": [Function],
      "label": "In English",
    }
  }
  loggedIn={true}
  searchPlaceholder="Etsi tietoa SATOlta..."
  searchSuggestions={Array []}
  searchTerm=""
>
  <MobileBar
    accountBtnHandler={[MockFunction]}
    accountBtnLabel="Kirjaudu"
    accountItems={
      Array [
        Object {
          "handler": [Function],
          "label": "Omasato",
          "variant": "button",
        },
        Object {
          "handler": [Function],
          "icon": "home",
          "label": "Minun kotini",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "message",
          "label": "Viestit",
          "variant": "buttonMenuItem",
        },
        Object {
          "active": true,
          "handler": [Function],
          "icon": "benefit",
          "label": "Asiakasedut",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "loggedInUser",
          "iconContent": "AK",
          "label": "Omat tiedot",
          "variant": "buttonMenuItem",
        },
        Object {
          "handler": [Function],
          "icon": "logout",
          "label": "Kirjaudu ulos",
          "variant": "buttonMenuItem",
        },
      ]
    }
    buttons={
      Array [
        Object {
          "active": true,
          "handler": [Function],
          "id": 1,
          "label": "Löydä koti",
          "variant": "button",
        },
        Object {
          "active": true,
          "handler": [Function],
          "id": 2,
          "items": Array [
            Object {
              "handler": [Function],
              "id": 6,
              "items": Array [
                Object {
                  "handler": [Function],
                  "id": 9,
                  "items": Array [],
                  "label": "Kodin etsiminen",
                  "variant": "buttonMenuItem",
                },
              ],
              "label": "Usein kysyttyä",
              "variant": "buttonMenuItem",
            },
            Object {
              "active": true,
              "handler": [Function],
              "id": 7,
              "label": "Ajankohtaista",
              "variant": "buttonMenuItem",
            },
            Object {
              "handler": [Function],
              "id": 8,
              "label": "Kotona",
              "variant": "buttonMenuItem",
            },
          ],
          "label": "Tietoa asumisesta",
          "variant": "button",
        },
        Object {
          "handler": [Function],
          "id": 4,
          "label": "Ota yhteyttä",
          "variant": "button",
        },
      ]
    }
    classes={
      Object {
        "accountBtn": "MobileBar-accountBtn-8",
        "dialog": "MobileBar-dialog-12",
        "grow": "MobileBar-grow-3",
        "link": "MobileBar-link-2",
        "localeLink": "MobileBar-localeLink-11",
        "logo": "MobileBar-logo-5",
        "logoContainer": "MobileBar-logoContainer-4",
        "paper": "MobileBar-paper-10",
        "root": "MobileBar-root-1",
        "separator": "MobileBar-separator-7",
        "toolbar": "MobileBar-toolbar-6",
        "top": "MobileBar-top-9",
      }
    }
    defaultBackLabel="Takaisin"
    handleSearch={[MockFunction]}
    links={
      Array [
        Object {
          "active": true,
          "label": "Etusivu",
          "route": "/",
        },
        Object {
          "handler": [Function],
          "label": "Sijoittajille",
          "type": "smallOnMobile",
        },
        Object {
          "executeHandler": true,
          "handler": [Function],
          "id": 10,
          "items": Array [
            Object {
              "handler": [Function],
              "label": "Mediapankki",
              "variant": "buttonMenuItem",
            },
            Object {
              "handler": [Function],
              "label": "Etsitkö asiantuntijaa?",
              "variant": "buttonMenuItem",
            },
          ],
          "label": "Medialle",
          "small": true,
          "type": "smallOnMobile",
        },
        Object {
          "handler": [Function],
          "label": "SATO yrityksenä",
          "type": "smallOnMobile",
        },
      ]
    }
    localeLink={
      Object {
        "handler": [Function],
        "label": "In English",
      }
    }
    loggedIn={true}
    searchPlaceholder="Etsi tietoa SATOlta..."
    searchSuggestions={Array []}
    searchTerm=""
  >
    <WithStyles(ForwardRef(AppBar))
      className="MobileBar-root-1"
      position="static"
    >
      <ForwardRef(AppBar)
        className="MobileBar-root-1"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault",
            "colorPrimary": "MuiAppBar-colorPrimary",
            "colorSecondary": "MuiAppBar-colorSecondary",
            "positionAbsolute": "MuiAppBar-positionAbsolute",
            "positionFixed": "MuiAppBar-positionFixed",
            "positionRelative": "MuiAppBar-positionRelative",
            "positionStatic": "MuiAppBar-positionStatic",
            "positionSticky": "MuiAppBar-positionSticky",
            "root": "MuiAppBar-root",
          }
        }
        position="static"
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary"
          component="header"
          elevation={4}
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MobileBar-root-1 MuiAppBar-colorPrimary MuiPaper-elevation4"
            >
              <WithStyles(ForwardRef(Toolbar))
                className="MobileBar-toolbar-6"
              >
                <ForwardRef(Toolbar)
                  className="MobileBar-toolbar-6"
                  classes={
                    Object {
                      "dense": "MuiToolbar-dense",
                      "gutters": "MuiToolbar-gutters",
                      "regular": "MuiToolbar-regular",
                      "root": "MuiToolbar-root",
                    }
                  }
                >
                  <div
                    className="MuiToolbar-root MuiToolbar-regular MobileBar-toolbar-6 MuiToolbar-gutters"
                  >
                    <IconButton
                      onClick={[Function]}
                      variant="toolbar"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        classes={
                          Object {
                            "root": "makeStyles-root-54 makeStyles-toolbar-58",
                          }
                        }
                        onClick={[Function]}
                      >
                        <ForwardRef(IconButton)
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <button
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <ForwardRef>
                                    <WithRef>
                                      <Menu>
                                        <WithStyles(ForwardRef)>
                                          <ForwardRef
                                            classes={
                                              Object {
                                                "large": "ForwardRef-large-74",
                                                "relative": "ForwardRef-relative-76",
                                                "small": "ForwardRef-small-75",
                                              }
                                            }
                                          >
                                            <WithRef
                                              classes={
                                                Object {
                                                  "large": "ForwardRef-large-74",
                                                  "relative": "ForwardRef-relative-76",
                                                  "small": "ForwardRef-small-75",
                                                }
                                              }
                                            >
                                              <SvgIcon
                                                classes={
                                                  Object {
                                                    "large": "ForwardRef-large-74",
                                                    "relative": "ForwardRef-relative-76",
                                                    "small": "ForwardRef-small-75",
                                                  }
                                                }
                                                numOfNewMessages={0}
                                                variant="default"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className=""
                                                  viewBox="0 0 24 24"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className=""
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M3.75 18h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 1 0 0 1.5zm0-5.25h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 1 0 0 1.5zm-.75-6c0 .414.336.75.75.75h16.5a.75.75 0 1 0 0-1.5H3.75a.75.75 0 0 0-.75.75z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </SvgIcon>
                                            </WithRef>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </Menu>
                                    </WithRef>
                                  </ForwardRef>
                                </span>
                                <NoSsr />
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </IconButton>
                    <div
                      className="MobileBar-separator-7"
                    />
                    <div
                      className="MobileBar-logoContainer-4"
                    >
                      <ForwardRef
                        className="MobileBar-logo-5"
                      >
                        <WithRef
                          className="MobileBar-logo-5"
                        >
                          <Logo
                            className="MobileBar-logo-5"
                          >
                            <svg
                              className="MobileBar-logo-5"
                              id="Layer_1"
                              viewBox="230.8 272.4 626.2 175.3"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <style>
                                .st5{fill:#f29318}
                              </style>
                              <path
                                className="st5"
                                d="M487.6 300.4h-36.7c-30.5 0-55.1 24.7-55.1 55.1v36.8c0 30.5 24.7 55.2 55.1 55.2h40.9v-36.9h-48.2c-6.1 0-11.1-5-11.1-11.1v-51.4c0-6.1 5-11.1 11.1-11.1H495c6.1 0 11.1 5 11.1 11.1v99.2h36.8v-91.9c-.2-30.3-24.8-55-55.3-55m213.3 36.7v-35.2H593.8v-29.2H557v119.6c0 30.5 24.7 55.2 55.2 55.2h36.7c24 0 44.4-15.4 52-36.8h-96c-6.1 0-11.1-5-11.1-11.1v-62.5h107.1zm100.7-36.7h-36.7c-30.5 0-55.2 24.7-55.2 55.1v36.8c0 30.5 24.7 55.2 55.2 55.2h36.7c30.4 0 55.1-24.7 55.1-55.2v-36.8c0-30.4-24.6-55.1-55.1-55.1m-44 110.2c-6.1 0-11.1-5-11.1-11.1v-51.4c0-6.1 5-11.1 11.1-11.1H809c6.1 0 11.1 5 11.1 11.1v51.5c0 6.1-5 11.1-11.1 11.1h-51.4v-.1zM328.2 300.4h-42c-30.5 0-55.1 24.7-55.1 55.1 0 23.9 16.6 43.8 38.9 49v-56.3c0-6.1 5-11.1 11.1-11.1h99.1c-7.6-21.4-28-36.7-52-36.7"
                              />
                              <path
                                className="st5"
                                d="M285.4 447.4h42c30.5 0 55.1-24.7 55.1-55.1 0-23.9-16.6-43.8-38.9-49v56.3c0 6.1-5 11.1-11.1 11.1h-99.1c7.6 21.4 27.9 36.7 52 36.7"
                              />
                            </svg>
                          </Logo>
                        </WithRef>
                      </ForwardRef>
                    </div>
                    <div
                      className="MobileBar-grow-3"
                    />
                    <ForwardRef
                      className="MobileBar-accountBtn-8"
                      color="primary"
                      onClick={[MockFunction]}
                      size="small"
                    >
                      <WithRef
                        className="MobileBar-accountBtn-8"
                        color="primary"
                        onClick={[MockFunction]}
                        size="small"
                      >
                        <Button
                          className="MobileBar-accountBtn-8"
                          color="primary"
                          onClick={[MockFunction]}
                          size="small"
                        >
                          <WithStyles(ForwardRef(Button))
                            className="MobileBar-accountBtn-8"
                            classes={
                              Object {
                                "focusVisible": "makeStyles-focusVisible-91",
                                "root": "makeStyles-root-86",
                              }
                            }
                            color="primary"
                            disableRipple={true}
                            disableTouchRipple={true}
                            onClick={[MockFunction]}
                            size="small"
                          >
                            <ForwardRef(Button)
                              className="MobileBar-accountBtn-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible makeStyles-focusVisible-91",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root makeStyles-root-86",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              disableRipple={true}
                              disableTouchRipple={true}
                              onClick={[MockFunction]}
                              size="small"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textPrimary MuiButton-textSizeSmall MuiButton-sizeSmall"
                                component="button"
                                disableRipple={true}
                                disableTouchRipple={true}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible makeStyles-focusVisible-91"
                                onClick={[MockFunction]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textPrimary MuiButton-textSizeSmall MuiButton-sizeSmall"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disableRipple={true}
                                  disableTouchRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible makeStyles-focusVisible-91"
                                  onClick={[MockFunction]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root makeStyles-root-86 MuiButton-text MobileBar-accountBtn-8 MuiButton-textPrimary MuiButton-textSizeSmall MuiButton-sizeSmall"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[MockFunction]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      Kirjaudu
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                      </WithRef>
                    </ForwardRef>
                    <div
                      className="MobileBar-separator-7"
                    />
                    <IconButton
                      onClick={[Function]}
                      variant="toolbar"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        classes={
                          Object {
                            "root": "makeStyles-root-54 makeStyles-toolbar-58",
                          }
                        }
                        onClick={[Function]}
                      >
                        <ForwardRef(IconButton)
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <button
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-root-54 makeStyles-toolbar-58"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <ForwardRef>
                                    <WithRef>
                                      <Search>
                                        <WithStyles(ForwardRef)>
                                          <ForwardRef
                                            classes={
                                              Object {
                                                "large": "ForwardRef-large-74",
                                                "relative": "ForwardRef-relative-76",
                                                "small": "ForwardRef-small-75",
                                              }
                                            }
                                          >
                                            <WithRef
                                              classes={
                                                Object {
                                                  "large": "ForwardRef-large-74",
                                                  "relative": "ForwardRef-relative-76",
                                                  "small": "ForwardRef-small-75",
                                                }
                                              }
                                            >
                                              <SvgIcon
                                                classes={
                                                  Object {
                                                    "large": "ForwardRef-large-74",
                                                    "relative": "ForwardRef-relative-76",
                                                    "small": "ForwardRef-small-75",
                                                  }
                                                }
                                                numOfNewMessages={0}
                                                variant="default"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className=""
                                                  viewBox="0 0 24 24"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className=""
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M9.537 13.45a5.5 5.5 0 1 1 .835.835l-.462-.373-.373-.463zM3.22 19.54a.75.75 0 0 0 1.06 1.061l5.15-5.15a7 7 0 1 0-1.06-1.06l-5.15 5.15z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </SvgIcon>
                                            </WithRef>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </Search>
                                    </WithRef>
                                  </ForwardRef>
                                </span>
                                <NoSsr />
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </IconButton>
                  </div>
                </ForwardRef(Toolbar)>
              </WithStyles(ForwardRef(Toolbar))>
            </header>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(AppBar)>
    </WithStyles(ForwardRef(AppBar))>
    <WithStyles(ForwardRef(Dialog))
      PaperProps={
        Object {
          "elevation": 0,
        }
      }
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "direction": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      className="MobileBar-dialog-12"
      fullScreen={true}
      open={false}
    >
      <ForwardRef(Dialog)
        PaperProps={
          Object {
            "elevation": 0,
          }
        }
        TransitionComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "direction": [Function],
              "in": [Function],
              "onEnter": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "style": [Function],
              "timeout": [Function],
            },
            "render": [Function],
          }
        }
        className="MobileBar-dialog-12"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullScreen={true}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "defaultProps": undefined,
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root MobileBar-dialog-12"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
    <WithStyles(ForwardRef(Dialog))
      PaperProps={
        Object {
          "elevation": 0,
        }
      }
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "direction": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      fullScreen={true}
      open={false}
    >
      <ForwardRef(Dialog)
        PaperProps={
          Object {
            "elevation": 0,
          }
        }
        TransitionComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "direction": [Function],
              "in": [Function],
              "onEnter": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "style": [Function],
              "timeout": [Function],
            },
            "render": [Function],
          }
        }
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullScreen={true}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "defaultProps": undefined,
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </MobileBar>
</WithStyles(MobileBar)>
`;
